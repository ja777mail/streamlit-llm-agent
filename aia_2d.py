import os
from openai import OpenAI
from dotenv import load_dotenv  # Load environment variables from .env file

load_dotenv()  # take environment variables from .env file

# –í –Ω–æ–≤–æ–º SDK –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å—Ç—Ä–∏–º–∏–Ω–≥ —Ç–∞–∫, —á—Ç–æ —Ç–æ–∫–µ–Ω—ã –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ (–∫–∞–∫ –±—É–¥—Ç–æ –º–æ–¥–µ–ª—å ¬´–ø–µ—á–∞—Ç–∞–µ—Ç¬ª).
# –í–æ—Ç –≤–µ—Ä—Å–∏—è, –≥–¥–µ –∞–≥–µ–Ω—Ç –ø–µ—á–∞—Ç–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å—Ä–∞–∑—É –≤ –∫–æ–Ω—Å–æ–ª—å (—Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è) –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ–±–∏—Ä–∞–µ—Ç –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –¥–∞–ª—å—à–µ:
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
client = OpenAI()
model = "gpt-5-nano"


# –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å Agent
class Agent:
    def __init__(self, name: str):
        self.name = name


# –ê–≥–µ–Ω—Ç —Å LLM
class LLMAgent(Agent):
    def __init__(self, name: str, model: str = "gpt-4.1-mini"):
        super().__init__(name)
        self.model = model

    def think_stream(self, input_data: str) -> str:
        """–°—Ç—Ä–∏–º–∏–Ω–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç LLM: –ø–µ—á–∞—Ç–∞–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç"""
        full_response = ""

        stream = client.chat.completions.create(
            model=self.model,
            messages=[{"role": "user", "content": input_data}],
            stream=True,
        )

        print(f"\nü§ñ {self.name} –¥—É–º–∞–µ—Ç:\n")
        for chunk in stream:
            if chunk.choices and chunk.choices[0].delta.content:
                delta = chunk.choices[0].delta.content
                print(delta, end="", flush=True)  # –ø–µ—á–∞—Ç–∞–µ–º –∫—É—Å–æ—á–µ–∫ —Å—Ä–∞–∑—É
                full_response += delta

        print("\n\n--- –ü–æ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à—ë–Ω ---")
        return full_response


# --- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ---
if __name__ == "__main__":
    agent = LLMAgent("–ú–æ–π –ê–≥–µ–Ω—Ç")
    # üìå –ß—Ç–æ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å:
    # –í –∫–æ–Ω—Å–æ–ª—å –∞–≥–µ–Ω—Ç –±—É–¥–µ—Ç ¬´–ø–µ—á–∞—Ç–∞—Ç—å¬ª –æ—Ç–≤–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
    # –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–µ—Å—å —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç —Å–æ–±—Ä–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π reply.
    reply = agent.think_stream(
        "–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Ä–∞—Å—Å–∫–∞–∑ –æ —á–µ–ª–æ–≤–µ–∫–µ, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—É—á–∏–ª—Å—è —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π –Ω–µ –±–æ–ª–µ–µ 50 —Å–ª–æ–≤."
    )
    print("\n–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞ (—Å–æ–±—Ä–∞–Ω–Ω—ã–π):", reply)
