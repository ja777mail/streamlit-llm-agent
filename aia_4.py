# –û—Ç–ª–∏—á–Ω–æ üôå –¢–æ–≥–¥–∞ –≤–æ—Ç –≤–µ—Ä—Å–∏—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π —á–∞—Ç–∞ (chat history) ‚Äî —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤–µ—Å—Ç–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥:
# –¢–µ–ø–µ—Ä—å:
# - –ö–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∏—Å—Ç–æ—Ä–∏—é.
# - –ò—Å—Ç–æ—Ä–∏—è —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ st.session_state.messages.
# - –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤–µ—Å—å –¥–∏–∞–ª–æ–≥.

# –¢–æ–≥–¥–∞ –¥–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ ‚Äî –≤ —Å—Ç–∏–ª–µ —á–∞—Ç–∞ (–º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞). Streamlit –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å HTML, –ø–æ—ç—Ç–æ–º—É –º—ã –æ–±–µ—Ä–Ω—ë–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ ¬´–ø—É–∑—ã—Ä—å–∫–∏¬ª —Å —Ä–∞–∑–Ω—ã–º —Ñ–æ–Ω–æ–º.
# –¢–µ–ø–µ—Ä—å:
# - –°–æ–æ–±—â–µ–Ω–∏—è –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–∞–∫ –ø—É–∑—ã—Ä—å–∫–∏ (user —Å–ø—Ä–∞–≤–∞, –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–ª–µ–≤–∞).
# - –¶–≤–µ—Ç–∞ –ø–æ—Ö–æ–∂–∏ –Ω–∞ WhatsApp: –∑–µ–ª—ë–Ω—ã–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–µ—Ä—ã–π –¥–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.

# –î–æ–±–∞–≤–∏–º –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫—É –≤–Ω–∏–∑ ‚Äî —á—Ç–æ–±—ã —á–∞—Ç –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–ª –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–∞–∫ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ).
# –¢–µ–ø–µ—Ä—å:
# - –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –≤ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ (500px).
# - –ü—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç—Å—è –≤–Ω–∏–∑.

# –î–µ–ª–∞–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Ä–µ–Ω–¥–µ—Ä–∏–ª–∏—Å—å –∫–∞–∫ Markdown (—Å–æ —Å–ø–∏—Å–∫–∞–º–∏, –∫–æ–¥–æ–º, –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ —Ç.–ø.).
# –¢–µ–ø–µ—Ä—å:
# - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî –æ—Å—Ç–∞—é—Ç—Å—è –≤ –∑–µ–ª—ë–Ω—ã—Ö –ø—É–∑—ã—Ä—è—Ö.
# - –û—Ç–≤–µ—Ç—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ ‚Äî –∫—Ä–∞—Å–∏–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ Markdown (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –±–ª–æ–∫–∞–º–∏ –∫–æ–¥–∞ python ... –∏–ª–∏ —Å–ø–∏—Å–∫–∞–º–∏).

import os
import streamlit as st
from openai import OpenAI

# –ß–∏—Ç–∞–µ–º API –∫–ª—é—á
api_key = os.environ.get("OPENAI_API_KEY") or st.secrets["OPENAI_API_KEY"]
client = OpenAI(api_key=api_key)

st.set_page_config(page_title="LLM Chat", layout="centered")
st.title("üí¨ –ú–∏–Ω–∏ LLM –∞–≥–µ–Ω—Ç")

# CSS —Å—Ç–∏–ª–∏ –¥–ª—è ¬´–ø—É–∑—ã—Ä—å–∫–æ–≤¬ª
st.markdown(
    """
    <style>
    .chat-bubble {
        padding: 10px 15px;
        border-radius: 15px;
        margin: 5px 0;
        max-width: 80%;
        word-wrap: break-word;
        display: inline-block;
        font-size: 16px;
    }
    .user-bubble {
        background-color: #DCF8C6;
        margin-left: auto;
        text-align: right;
    }
    .assistant-bubble {
        background-color: #F1F0F0;
        margin-right: auto;
        text-align: left;
        width: 100%;
    }
    .chat-container {
        max-height: 500px;
        overflow-y: auto;
    }
    </style>
""",
    unsafe_allow_html=True,
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
if "messages" not in st.session_state:
    st.session_state.messages = []

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —á–∞—Ç–∞
chat_box = st.container()

with chat_box:
    st.markdown('<div class="chat-container">', unsafe_allow_html=True)
    for msg in st.session_state.messages:
        if msg["role"] == "user":
            st.markdown(
                f'<div class="chat-bubble user-bubble">{msg["content"]}</div>',
                unsafe_allow_html=True,
            )
        else:
            # üëâ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—Å–∫–∏–π —Ç–µ–∫—Å—Ç —Ä–µ–Ω–¥–µ—Ä–∏–º —á–µ—Ä–µ–∑ Markdown
            with st.container():
                st.markdown(
                    f'<div class="chat-bubble assistant-bubble">',
                    unsafe_allow_html=True,
                )
                st.markdown(msg["content"])  # –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Markdown
                st.markdown("</div>", unsafe_allow_html=True)
    # üëá —Å–∫—Ä–æ–ª–ª–∏–º –≤ –∫–æ–Ω–µ—Ü
    st.markdown('<div id="chat-end"></div>', unsafe_allow_html=True)
    st.markdown(
        """
        <script>
        var chatEnd = document.getElementById("chat-end");
        if (chatEnd) {
            chatEnd.scrollIntoView({behavior: "smooth"});
        }
        </script>
    """,
        unsafe_allow_html=True,
    )
    st.markdown("</div>", unsafe_allow_html=True)

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞
prompt = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", key="input")

# –ö–Ω–æ–ø–∫–∞
if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å"):
    if prompt.strip():
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        st.session_state.messages.append({"role": "user", "content": prompt})

        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞..."):
            response = client.chat.completions.create(
                model="gpt-4o-mini", messages=st.session_state.messages
            )
            reply = response.choices[0].message.content

            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            st.session_state.messages.append({"role": "assistant", "content": reply})

        st.rerun()
    else:
        st.warning("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π!")
